// Append function p 133

local Append L1 L2 L3 Out Reverse Out1 in 
   Append = fun {$ Ls Ms}
               case Ls 
                  of nil then Ms
                  [] '|'(1:X 2:Lr) then Y in
                     Y = {Append Lr Ms}
                     // skip Full
                     (X|Y)
                end
            end

   Reverse = fun {$ Ls}
               case Ls
                  of nil then nil
                  [] '|'(1:X 2:Xr) then Xl in
                  Xl = (X|nil)
                  {Append {Reverse Xr} Xl}
               end
            end


   L1 = (1|(2|(3|nil)))
   L2 = (4|(5|(6|nil)))
   L3 = (7|(8|(9|(10|nil))))

   Out = {Append L1 L2}

   Out1 = {Reverse L3}
   skip Browse Out
   skip Browse Out1
   skip Full
end